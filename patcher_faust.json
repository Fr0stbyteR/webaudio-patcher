{
    "lines": {
        "line-39": {
            "src": [
                "box-25",
                0
            ],
            "dest": [
                "box-26",
                0
            ],
            "id": "line-39",
            "disabled": false
        },
        "line-40": {
            "src": [
                "box-25",
                0
            ],
            "dest": [
                "box-27",
                0
            ],
            "id": "line-40",
            "disabled": false
        },
        "line-41": {
            "src": [
                "box-25",
                0
            ],
            "dest": [
                "box-8",
                0
            ],
            "id": "line-41",
            "disabled": false
        },
        "line-45": {
            "src": [
                "box-28",
                0
            ],
            "dest": [
                "box-25",
                0
            ],
            "id": "line-45",
            "disabled": false
        },
        "line-46": {
            "src": [
                "box-25",
                1
            ],
            "dest": [
                "box-29",
                0
            ],
            "id": "line-46",
            "disabled": false
        }
    },
    "boxes": {
        "box-8": {
            "id": "box-8",
            "name": "box-8",
            "class": "WA.Destination",
            "inlets": 1,
            "outlets": 0,
            "patching_rect": [
                0,
                780,
                126,
                28
            ],
            "text": "WA.Destination",
            "args": [],
            "props": {},
            "prevData": {
                "storage": {}
            }
        },
        "box-25": {
            "id": "box-25",
            "name": "box-25",
            "class": "Faust.DSP",
            "inlets": 1,
            "outlets": 2,
            "patching_rect": [
                0,
                195,
                855,
                514.469
            ],
            "text": "Faust.DSPÂ  @bufferSize 1024",
            "args": [],
            "props": {
                "bufferSize": 1024
            },
            "prevData": {
                "storage": {
                    "showEditor": true,
                    "code": "import(\"stdfaust.lib\");\nsig = ba.pulsen(1, 5000) : pm.djembe(60, 0.3, 0.4, 1);\necho(t, fb) = + ~ (@((t / 1000) * ma.SR) : *(fb));\nphasor(f)=f/ma.SR:(+,1:fmod)~_;\nsaw(f) = (phasor(f) - 0.5) * 2;\nosc(f) = sin(phasor(f) * 2 * ma.PI);\nsquare(f) = (phasor(f) > 0.5) * 2 - 1;\npan(v) = @(*(lGain), rGain * delHead), @(*(rGain), lGain * delHead) with {\n    rGain = v : si.smooth(0.999) : min(1.) : max(0.) : sqrt;\n    lGain = (1 - rGain) : sqrt;\n\tdelHead = ma.SR * 0.2 / 340;\n};\n\nprocess(i1) = i1 : echo(delay, fb) <: pan(osc(f) * depth) with {\n  fb = hslider(\"fb\", 0.65, 0, 1, 0.01);\n  delay = hslider(\"delay\", 50, 20, 2000, 1);\n  f = hslider(\"freq\", 1, 0, 20, 0.1);\n  depth = hslider(\"depth\", 1, 0, 1, 0.01);\n}; "
                }
            }
        },
        "box-26": {
            "id": "box-26",
            "name": "box-26",
            "class": "WA.Oscilloscope",
            "inlets": 1,
            "outlets": 0,
            "patching_rect": [
                885,
                480,
                225,
                180
            ],
            "text": "WA.Oscilloscope 512",
            "args": [
                "512"
            ],
            "props": {},
            "prevData": {
                "storage": {}
            }
        },
        "box-27": {
            "id": "box-27",
            "name": "box-27",
            "class": "WA.Spectrogram",
            "inlets": 1,
            "outlets": 0,
            "patching_rect": [
                1125,
                480,
                272,
                180
            ],
            "text": "WA.Spectrogram 512",
            "args": [
                "512"
            ],
            "props": {},
            "prevData": {
                "storage": {}
            }
        },
        "box-28": {
            "id": "box-28",
            "name": "box-28",
            "class": "Faust.DSP",
            "inlets": 1,
            "outlets": 2,
            "patching_rect": [
                0,
                0,
                854,
                164.875
            ],
            "text": "Faust.DSP @bufferSize 1024",
            "args": [],
            "props": {
                "bufferSize": 1024
            },
            "prevData": {
                "storage": {
                    "showEditor": true,
                    "code": "import(\"stdfaust.lib\");\nprocess = checkbox(\"enable\") * (ba.pulsen(1, 10000) : pm.djembe(60, 0.3, 0.4, 1));  "
                }
            }
        },
        "box-29": {
            "id": "box-29",
            "name": "box-29",
            "class": "Faust.Diagram",
            "inlets": 1,
            "outlets": 0,
            "patching_rect": [
                870,
                0,
                733,
                178
            ],
            "text": "Faust.Diagram",
            "args": [],
            "props": {},
            "prevData": {
                "storage": {}
            }
        }
    },
    "data": {
        "box-8": {
            "WA.Destination": {
                "storage": {}
            }
        },
        "box-25": {
            "Faust.DSP": {
                "storage": {
                    "showEditor": true,
                    "code": "import(\"stdfaust.lib\");\nsig = ba.pulsen(1, 5000) : pm.djembe(60, 0.3, 0.4, 1);\necho(t, fb) = + ~ (@((t / 1000) * ma.SR) : *(fb));\nphasor(f)=f/ma.SR:(+,1:fmod)~_;\nsaw(f) = (phasor(f) - 0.5) * 2;\nosc(f) = sin(phasor(f) * 2 * ma.PI);\nsquare(f) = (phasor(f) > 0.5) * 2 - 1;\npan(v) = @(*(lGain), rGain * delHead), @(*(rGain), lGain * delHead) with {\n    rGain = v : si.smooth(0.999) : min(1.) : max(0.) : sqrt;\n    lGain = (1 - rGain) : sqrt;\n\tdelHead = ma.SR * 0.2 / 340;\n};\n\nprocess(i1) = i1 : echo(delay, fb) <: pan(osc(f) * depth) with {\n  fb = hslider(\"fb\", 0.65, 0, 1, 0.01);\n  delay = hslider(\"delay\", 50, 20, 2000, 1);\n  f = hslider(\"freq\", 1, 0, 20, 0.1);\n  depth = hslider(\"depth\", 1, 0, 1, 0.01);\n}; "
                }
            }
        },
        "box-26": {
            "WA.Oscilloscope": {
                "storage": {}
            }
        },
        "box-27": {
            "WA.Spectrogram": {
                "storage": {}
            }
        },
        "box-28": {
            "Faust.DSP": {
                "storage": {
                    "showEditor": true,
                    "code": "import(\"stdfaust.lib\");\nprocess = checkbox(\"enable\") * (ba.pulsen(1, 10000) : pm.djembe(60, 0.3, 0.4, 1));  "
                }
            }
        },
        "box-29": {
            "Faust.Diagram": {
                "storage": {}
            }
        }
    },
    "state": {
        "locked": false,
        "presentation": false,
        "showGrid": true
    },
    "boxIndexCount": 29,
    "lineIndexCount": 46,
    "bgcolor": [
        61,
        65,
        70,
        1
    ],
    "editing_bgcolor": [
        82,
        87,
        94,
        1
    ],
    "grid": [
        15,
        15
    ]
}